#Module 5: Mini Project Library Management System 

import mysql.connector

class LibraryManagementSystem:
    def __init__(self):
        self.db = mysql.connector.connect(
            host="localhost",
            user="emcmillan1",
            password="Aurora1952$",
            database="library_management"
        )
        self.cursor = self.db.cursor()

    def main_menu(self):
        print("Welcome to the Library Management System with Database Integration!")
        print("Main Menu:")
        print("1. Book Operations")
        print("2. User Operations")
        print("3. Author Operations")
        print("4. Genre Operations")
        print("5. Quit")

        choice = input("Enter your choice: ")
        if choice == "1":
            self.book_menu()
        elif choice == "2":
            self.user_menu()
        elif choice == "3":
            self.author_menu()
        elif choice == "4":
            self.genre_menu()
        elif choice == "5":
            print("Exiting...")
        else:
            print("Invalid choice. Please try again.")

    def book_menu(self):
        print("\nBook Operations:")
        print("1. Add a new book")
        print("2. Borrow a book")
        print("3. Return a book")
        print("4. Search for a book")
        print("5. Display all books")

    def user_menu(self):
        print("\nUser Operations:")
        print("1. Add a new user")
        print("2. View user details")
        print("3. Display all users")

    def author_menu(self):
        print("\nAuthor Operations:")
        print("1. Add a new author")
        print("2. View author details")
        print("3. Display all authors")

    def genre_menu(self):
        print("\nGenre Operations:")
        print("1. Add a new genre")
        print("2. View genre details")
        print("3. Display all genres")

    def create_database_tables(self):
        
        ddl_scripts = [
            """
            CREATE TABLE IF NOT EXISTS books (
                id INT AUTO_INCREMENT PRIMARY KEY,
                title VARCHAR(255) NOT NULL,
                author_id INT,
                genre_id INT,
                isbn VARCHAR(13) NOT NULL,
                publication_date DATE,
                availability BOOLEAN DEFAULT 1,
                FOREIGN KEY (author_id) REFERENCES authors(id),
                FOREIGN KEY (genre_id) REFERENCES genres(id)
            )
            """,
        ]
        for script in ddl_scripts:
            self.cursor.execute(script)

        print("Database tables created successfully.")

    def close_connection(self):
        self.cursor.close()
        self.db.close()

if __name__ == "__main__":
    library_system = LibraryManagementSystem()
    library_system.create_database_tables()
    library_system.main_menu()
